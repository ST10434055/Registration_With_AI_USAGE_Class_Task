@model IEnumerable<ProfileRegistratrionWithAiUsage.Models.ProfileTableEntity>
<!-- fully utilised Claude Sonnet 4 (Anthropic) to generate this view -->
@{
    ViewData["Title"] = "All Profiles";
}

<div class="container mt-4">
    <div class="row">
        <div class="col-12">
            <div class="d-flex justify-content-between align-items-center mb-4">
                <h2 class="text-primary">
                    <i class="fas fa-users"></i> All Registered Profiles
                </h2>
                <div>
                    <!-- This button is not working as expected, generated by Claude Sonnet 4 (Anthropic) -->
                    <a href="@Url.Action("Register")" class="btn btn-success">
                        <i class="fas fa-plus"></i> Add New Profile
                    </a>
                    <!-- This button is not working as expected, generated by Claude Sonnet 4 (Anthropic) -->
                    <a href="@Url.Action("Index")" class="btn btn-outline-primary">
                        <i class="fas fa-home"></i> Home
                    </a>
                </div>
            </div>

            @if (Model != null && Model.Any())
            {
                <div class="card shadow">
                    <div class="card-header bg-primary text-white">
                        <h5 class="mb-0">
                            <i class="fas fa-table"></i> Profile Details (@Model.Count() profiles found)
                        </h5>
                    </div>
                    <div class="card-body p-0">
                        <div class="table-responsive">
                            <table class="table table-striped table-hover mb-0">
                                <thead class="table-dark">
                                    <tr>
                                        <th scope="col">#</th>
                                        <th scope="col">Name</th>
                                        <th scope="col">Surname</th>
                                        <th scope="col">Email</th>
                                        <th scope="col">Age</th>
                                        <th scope="col">Created Date</th>
                                        <th scope="col">Profile ID</th>
                                    </tr>
                                </thead>
                                <tbody>
                                    @{
                                        int counter = 1;
                                    }
                                    @foreach (var profile in Model.OrderByDescending(p => p.CreatedDate))
                                    {
                                        <tr>
                                            <th scope="row">@counter</th>
                                            <td>
                                                <strong>@(string.IsNullOrEmpty(profile.Name) ? "N/A" : profile.Name)</strong>
                                            </td>
                                            <td>@(string.IsNullOrEmpty(profile.Surname) ? "N/A" : profile.Surname)</td>
                                            <td>
                                                <a href="mailto:@(profile.Email)" class="text-decoration-none">
                                                    @(string.IsNullOrEmpty(profile.Email) ? "N/A" : profile.Email)
                                                </a>
                                            </td>
                                            <td>
                                                <span class="badge bg-info">@(string.IsNullOrEmpty(profile.Age) ? "N/A" : profile.Age)</span>
                                            </td>
                                            <td>
                                                <small class="text-muted">
                                                    @(profile.CreatedDate.ToString("MMM dd, yyyy HH:mm"))
                                                </small>
                                            </td>
                                            <td>
                                                <small class="text-muted font-monospace">
                                                    @(string.IsNullOrEmpty(profile.RowKey) ? "N/A" : profile.RowKey.Substring(0, Math.Min(8, profile.RowKey.Length)))...
                                                </small>
                                            </td>
                                        </tr>
                                        counter++;
                                    }
                                </tbody>
                            </table>
                        </div>
                    </div>
                    <div class="card-footer bg-light">
                        <div class="row">
                            <div class="col-md-6">
                                <small class="text-muted">
                                    <i class="fas fa-info-circle"></i> 
                                    Showing @Model.Count() profile(s) from Azure Table Storage
                                </small>
                            </div>
                            <div class="col-md-6 text-end">
                                <small class="text-muted">
                                    <i class="fas fa-clock"></i> 
                                    Last updated: @DateTime.Now.ToString("MMM dd, yyyy HH:mm:ss")
                                </small>
                            </div>
                        </div>
                    </div>
                </div>
            }
            else
            {
                <div class="card shadow">
                    <div class="card-body text-center py-5">
                        <i class="fas fa-user-slash fa-4x text-muted mb-4"></i>
                        <h4 class="text-muted">No Profiles Found</h4>
                        <p class="text-muted mb-4">
                            There are no registered profiles in the system yet.
                        </p>
                        <a href="@Url.Action("Register")" class="btn btn-primary btn-lg">
                            <i class="fas fa-plus"></i> Register First Profile
                        </a>
                    </div>
                </div>
            }
        </div>
    </div>
</div>

<!-- Add Font Awesome for icons -->
<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.0.0/css/all.min.css">

<style>
    .table th {
        border-top: none;
        font-weight: 600;
    }
    
    .table td {
        vertical-align: middle;
    }
    
    .card {
        border: none;
        border-radius: 10px;
    }
    
    .card-header {
        border-radius: 10px 10px 0 0 !important;
    }
    
    .btn {
        border-radius: 6px;
    }
    
    .badge {
        font-size: 0.85em;
    }
    
    .font-monospace {
        font-family: 'Courier New', monospace;
    }
</style>

<!-- AI Usage Documentation -->
<!-- 
    AI Tools Used for Profile Viewing Functionality:
    - Claude Sonnet 4 (Anthropic): Generated the complete AllProfiles view with responsive table design
    - Created comprehensive profile display with:
        * Responsive Bootstrap table layout
        * Font Awesome icons for better UX
        * Profile details including Name, Surname, Email, Age, Created Date, and Profile ID
        * Empty state handling when no profiles exist
        * Professional styling with cards and shadows
        * Action buttons for navigation
    - No external web searches performed - used existing knowledge of ASP.NET Core MVC and Bootstrap
-->
